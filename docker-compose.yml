services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.2
    environment:
      - discovery.type=${ELASTIC_DISCOVERY_TYPE:-single-node}
      - xpack.security.enabled=${ELASTIC_SECURITY_ENABLED:-false} # Disables security
    ports:
      - "${ELASTIC_PORT:-9200}:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    restart: always

  kibana:
    image: docker.elastic.co/kibana/kibana:8.10.2
    environment:
      - ELASTICSEARCH_HOSTS=${ELASTICSEARCH_HOSTS:-http://elasticsearch:9200}
      - xpack.security.enabled=${KIBANA_SECURITY_ENABLED:-false} # Disables security
    ports:
      - "${KIBANA_PORT:-5601}:5601"
    restart: always

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    restart: always

  grafana:
    image: grafana/grafana:latest
    ports:
      - "${GRAFANA_PORT:-3000}:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    restart: always

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    environment:
      - HTPASSWD_CONTENT=${HTPASSWD_CONTENT}
    ports:
      - "8080:80"
    command: sh -c "echo \"$HTPASSWD_CONTENT\" > /etc/nginx/.htpasswd && nginx -g 'daemon off;'"
    restart: always

  nodejs:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nodejs
    ports:
      - "3000:3000"
    restart: always

volumes:
  elasticsearch_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local